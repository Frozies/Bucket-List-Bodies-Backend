name: Deploy to Production
'on':
  push:
    branches:
      - main
  workflow_dispatch: null

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: frozies/bucket_list_bodies_backend

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-api-1:
    needs: push_to_registry
    runs-on: ubuntu-latest
    steps:
      - name: Deploy api to DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        env:
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          MONGODB: ${{ secrets.MONGODB }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
        with:
          host: ${{ secrets.DO_SERVER_IP }}
          key: ${{ secrets.OPENSSH_PRIVATE_KEY }}
          debug: true
          port: 22
          username: root
          command_timeout: 5m
          passphrase: ${{ secrets.OPENSSH_PRIVATE_KEY_PASSPHRASE }}
          envs: STRIPE_SECRET_KEY,CLOUDINARY_CLOUD_NAME,CLOUDINARY_API_KEY,CLOUDINARY_API_SECRET,MONGODB,SERVER_PORT
          script: >
            docker pull frozies/bucket_list_bodies_backend:main

            echo "giving health-check time to fail..."

            sleep 30 # ((unhealthy + 1) * interval)

            docker stop blb-backend || true

            docker rm blb-backend || true

            echo "starting server instance..."

            docker run -d \
              --restart always \
              -p 4001:4001 \
              -e STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY \
              -e CLOUDINARY_CLOUD_NAME=$CLOUDINARY_CLOUD_NAME \
              -e CLOUDINARY_API_KEY=$CLOUDINARY_API_KEY \
              -e CLOUDINARY_API_SECRET=$CLOUDINARY_API_SECRET \
              -e MONGODB=$MONGODB \
              -e SERVER_PORT=$SERVER_PORT \
              --name blb-backend \
              frozies/bucket_list_bodies_backend:main

            echo "giving healthcheck time to recover..."

            sleep 40 # ((healthy + 1) * interval)
